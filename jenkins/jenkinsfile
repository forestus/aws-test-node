pipeline {
    agent any 
    stages {
        stage('Compile') {
            steps {
                echo 'Compile the source code' 
                sh 'npm install'
                sh 'npm start'
            }
        }
        stage('Run Unit Tests') {
            steps {
                echo 'Run unit tests from the source code'
                sh 'npm run test:unit'
            }
        }
        stage('Run Integration Tests') {
            steps {
                echo 'Run only crucial integration tests from the source code' 
                sh 'npm run test:integration'
            }
        }
        stage('Sending Coverage') {
            steps {
                echo 'Save the assemblies generated from the compilation' 
                sh 'npm run test:ci'
            }
        }
        stage('Build') {
            steps {
                sh 'make' 
                archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
                // sh 'find /coverage -path '*/.*' -prune -o -type f -print | zip ~/coverage.zip -@'                
                emailext body: '
                <fileset dir="${coverage.src}" casesensitive="yes">
                <include name="coverage/**"/> 
                </fileset>
                ',
                subject: 'Coverage Test',
                to: 'forestus7@gmail.com' 
            }
        }
        stage('Deploy') {
            when {
              expression {
                currentBuild.result == null || currentBuild.result == 'SUCCESS' 
              }
            }
            steps {
                sh 'make publish'
            }
        }
    }
}